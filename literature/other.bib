@incollection{heidenreich2010a,
year={2010},
isbn={978-3-642-12106-7},
booktitle={Software Language Engineering},
volume={5969},
series={Lecture Notes in Computer Science},
editor={van den Brand, Mark and Ga\v{s}evi\'{c}, Dragan and Gray, Jeff},
doi={10.1007/978-3-642-12107-4_25},
title={Closing the Gap between Modelling and Java},
url={http://dx.doi.org/10.1007/978-3-642-12107-4_25},
publisher={Springer Berlin Heidelberg},
author={Heidenreich, Florian and Johannes, Jendrik and Seifert, Mirko and Wende, Christian},
pages={374-383},
}

@Book{reussner2016a,
	author = {Reussner, Ralf H. and Becker, Steffen and Happe, Jens and Heinrich, Robert and Koziolek, Anne and Koziolek, Heiko and Kramer, Max and Krogmann, Klaus},
	title = {Modeling and Simulating Software Architectures -- The Palladio Approach},
	publisher = {MIT Press},
	month = oct,
	year = {2016},
	address = {Cambridge, MA},
	isbn = {9780262034760},
	pagetotal = {408},
	url = {http://mitpress.mit.edu/books/modeling-and-simulating-software-architectures},
	tags = {book}
}

@inproceedings{langhammer2015a,
	Author = {Langhammer, Michael and Krogmann, Klaus},
	Booktitle = {17. Workshop Software-Reengineering und-Evolution},
	Title = {A Co-evolution Approach for Source Code and Component-based Architecture Models},
	Url = {http://fg-sre.gi.de/fileadmin/gliederungen/fg-sre/wsre2015/WSRE2015-Proceeedings-preliminary.pdf#page=40},
	Volume = {4},
	Year = {2015},
	Bdsk-Url-1 = {http://fg-sre.gi.de/fileadmin/gliederungen/fg-sre/wsre2015/WSRE2015-Proceeedings-preliminary.pdf#page=40}
}


@Article{cleve2019dagstuhl,
  author =	{Anthony Cleve and Ekkart Kindler and Perdita Stevens and Vadim Zaytsev},
  title =	{{Multidirectional Transformations and Synchronisations (Dagstuhl Seminar 18491)}},
  pages =	{1--48},
  journal =	{Dagstuhl Reports},
  ISSN =	{2192-5283},
  year =	{2019},
  volume =	{8},
  number =	{12},
  editor =	{Anthony Cleve and Ekkart Kindler and Perdita Stevens and Vadim Zaytsev},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =	{http://drops.dagstuhl.de/opus/volltexte/2019/10360},
  URN =	{urn:nbn:de:0030-drops-103606},
  doi =		{10.4230/DagRep.8.12.1},
}

@INPROCEEDINGS{stevens2017a, 
	author={Stevens, Perdita}, 
	booktitle={2017 ACM/IEEE 20th International Conference on Model Driven Engineering Languages and Systems (MODELS)}, 
	title={{Bidirectional Transformations in the Large}}, 
	year={2017}, 
	pages={1-11}, 
	keywords={software engineering;bidirectional transformation;binary consistency relations;consistency restoration;metamodels;multiary consistency relation;Computational modeling;Model-driven development;Safety;Software;Stakeholders;Unified modeling language}, 
	doi={10.1109/MODELS.2017.8}, 
	month=Sep,
}

@INCOLLECTION{atkinson2010a,
	author = {Atkinson, Colin and Stoll, Dietmar and Bostan, Philipp},
	title = {{Orthographic Software Modeling: A Practical Approach to View-Based Development}},
	booktitle = {Evaluation of Novel Approaches to Software Engineering},
	address = {Berlin/Heidelberg},
	publisher = {Springer},
	year = {2010},
	editor={Maciaszek, LeszekA. and Gonz\'{a}lez-P\'{e}rez, C\'{e}sar and Jablonski, Stefan},
	volume = {69},
	series = {Communications in Computer and Information Science},
	pages = {206-219},
	affiliation = {Institute of Computer Science, University of Mannheim, 68131 Mannheim, Germany},
	isbn = {978-3-642-14819-4},
	keyword = {Computer Science},
}

@inproceedings{kramer2013b,
	Acmid = {2489864},
	Address = {New York, NY, USA},
	Articleno = {5},
	Author = {Kramer, Max E. and Burger, Erik and Langhammer, Michael},
	Booktitle = {Proceedings of the 1st Workshop on View-Based, Aspect-Oriented and Orthographic Software Modelling},
	Doi = {10.1145/2489861.2489864},
	Isbn = {978-1-4503-2070-2},
	Keywords = {component-based software architectures, model-driven engineering, synchronization, view-based modeling},
	Location = {Montpellier, France},
	Numpages = {6},
	Pages = {5:1--5:6},
	Pdf = {http://sdqweb.ipd.kit.edu/publications/pdfs/kramer2013b.pdf},
	Publisher = {ACM},
	Series = {VAO '13},
	Tags = {workshop, Vitruv},
	Title = {{View-Centric Engineering with Synchronized Heterogeneous Models}},
	Url = {http://doi.acm.org/10.1145/2489861.2489864},
	Year = {2013},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2489861.2489864},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2489861.2489864}
}

@inproceedings{diskin2018a,
abstract = {Multiple (more than 2) model synchronization is ubiquitous and important for MDE, but its theoretical underpinning gained much less attention than the binary case. Specifically, the latter was extensively studied by the bx community in the framework of algebraic models for update propagation called lenses. Now we make a step to restore the balance and propose a notion of multiary delta lens. Besides multiarity, our lenses feature reflective updates, when consistency restoration requires some amendment of the update that violated consistency. We emphasize the importance of various ways of lens composition for practical applications of the framework, and prove several composition results.},
address = {Cham},
author = {Diskin, Zinovy and K{\"{o}}nig, Harald and Lawford, Mark},
booktitle = {Fundamental Approaches to Software Engineering},
editor = {Russo, Alessandra and Sch{\"{u}}rr, Andy},
isbn = {978-3-319-89363-1},
pages = {21--37},
publisher = {Springer International Publishing},
title = {{Multiple Model Synchronization with Multiary Delta Lenses}},
year = {2018}
}

@inproceedings{stunkel2018a,
address = {New York, NY, USA},
author = {St{\"{u}}nkel, Patrick and K{\"{o}}nig, Harald and Lamo, Yngve and Rutle, Adrian},
booktitle = {Conference Companion of the 2Nd International Conference on Art, Science, and Engineering of Programming},
doi = {10.1145/3191697.3191715},
isbn = {978-1-4503-5513-1},
keywords = {Bidirectional Transformations,Inter-Model Constraints,Modeling Languages},
pages = {9--17},
publisher = {ACM},
series = {Programming'18 Companion},
title = {{Multimodel Correspondence Through Inter-model Constraints}},
url = {http://doi.acm.org/10.1145/3191697.3191715},
year = {2018}
}

@inproceedings{lucio2013a,
abstract = {In this paper, we describe our ongoing work on model transformation chains. Model transformation chains refer to the sequences of model transformations in Model Driven Engineering (MDE). The transformations represent and formalise typical model/software engineering activities, and their chaining is the natural composition of such activities. Model transformation chains found in industrial practice vary widely, depending on the specific domain they are used in. By explicitly modelling development activities, these activities can be analysed and the MDE process may be improved. As a step towards such analyses, we propose an integrated framework to describe all the artifacts involved in model transformation chains, as well as the means to execute ``enact'' those chains. We describe the Formalism Transformation Graph + Process Model (FTG+PM) which is at the heart of our framework in detail.},
address = {Berlin, Heidelberg},
author = {L{\'{u}}cio, Levi and Mustafiz, Sadaf and Denil, Joachim and Vangheluwe, Hans and Jukss, Maris},
booktitle = {SDL 2013: Model-Driven Dependability Engineering},
editor = {Khendek, Ferhat and Toeroe, Maria and Gherbi, Abdelouahed and Reed, Rick},
isbn = {978-3-642-38911-5},
pages = {182--202},
publisher = {Springer Berlin Heidelberg},
title = {{FTG+PM: An Integrated Framework for Investigating Model Transformation Chains}},
year = {2013}
}

@inproceedings{vanhooff2007a,
abstract = {A model transformation can be decomposed into a sequence of subtransformations, i.e. a transformation chain, each addressing a limited set of concerns. However, with current transformation technologies it is hard to (re)use and compose subtransformations without being very familiar with their implementation details. Furthermore, the difficulty of combining different transformation technologies often thwarts choosing the most appropriate technology for each subtransformation. In this paper we propose a model-based approach to reuse and compose subtransformations in a technology-independent fashion. This is accomplished by developing a unified representation of transformations and facilitating detailed transformation specifications. We have implemented our approach in a tool called UniTI, which also provides a transformation chain editor. We have evaluated our approach by comparing it to alternative approaches.},
address = {Berlin, Heidelberg},
author = {Vanhooff, Bert and Ayed, Dhouha and {Van Baelen}, Stefan and Joosen, Wouter and Berbers, Yolande},
booktitle = {Model Driven Engineering Languages and Systems},
editor = {Engels, Gregor and Opdyke, Bill and Schmidt, Douglas C and Weil, Frank},
isbn = {978-3-540-75209-7},
pages = {31--45},
publisher = {Springer Berlin Heidelberg},
title = {{UniTI: A Unified Transformation Infrastructure}},
year = {2007}
}

@inproceedings{vanhooff2006a,
abstract = {The Model Driven Development (MDD) paradigm stimulates the use of models as the main artifacts for software development. These models can be situated at high levels of abstraction, close to the application's business domain. Many consecutive automatic transformations (a transformation chain) can be applied to these models to add the necessary details in order to generate a concrete implementation. This means that a large part of the total development effort is relocated to the development of transformations and hence we should have the necessary tooling support for designing transformation chains. In this paper we propose a metamodel for a transformation chain modeling language that enables implementation independent composition of transformations. We also propose a concrete syntax for this language that is based on UML activity diagrams.},
address = {Berlin, Heidelberg},
author = {Vanhooff, Bert and {Van Baelen}, Stefan and Hovsepyan, Aram and Joosen, Wouter and Berbers, Yolande},
booktitle = {Embedded Computer Systems: Architectures, Modeling, and Simulation},
editor = {Vassiliadis, Stamatis and Wong, Stephan and H{\"{a}}m{\"{a}}l{\"{a}}inen, Timo D},
isbn = {978-3-540-36411-5},
pages = {39--48},
publisher = {Springer Berlin Heidelberg},
title = {{Towards a Transformation Chain Modeling Language}},
year = {2006}
}

@inproceedings{wagelaar2008a,
abstract = {Model transformation languages have matured to a point where people have started experimenting with model transformation definitions themselves in addition to the language they are written in. In addition to the transformation language properties, the properties of model transformation definitions themselves become important, such as scalability, maintainability and reusability. Composition of model transformations allows for the creation of smaller, maintainable and reusable model transformation definitions that can scale up to a larger model transformation. There are two kinds of composition for model transformations. External composition deals with chaining separate model transformations together by passing models from one transformation to another. Internal composition composes two model transformation definitions into one new model transformation, which typically requires knowledge of the transformation language. This paper focuses on internal composition for two rule-based model transformation languages. One is the ATLAS Transformation Language, which serves as our implementation vehicle. The other is the QVT Relations language, which is a standard transformation language for MOF. We propose a composition technique called module superimposition. We discuss how module superimposition interacts with other composition techniques in ATL, such as helpers, called rules and rule inheritance. Together, these techniques allow for powerful composition of entire transformation modules as well as individual transformation rules. By applying superimposition to QVT Relations, we demonstrate that our composition technique is relevant outside the ATL language as well.},
address = {Berlin, Heidelberg},
author = {Wagelaar, Dennis},
booktitle = {Theory and Practice of Model Transformations},
editor = {Vallecillo, Antonio and Gray, Jeff and Pierantonio, Alfonso},
isbn = {978-3-540-69927-9},
pages = {152--167},
publisher = {Springer Berlin Heidelberg},
title = {{Composition Techniques for Rule-Based Model Transformation Languages}},
year = {2008}
}

@inproceedings{cuadrado2008a,
abstract = {Reusability is one of the principal software quality factors. In the context of model driven development (MDD), reuse of model transformations is also considered a key activity to achieve productivity and quality. It is necessary to devote important research efforts to find out appropriate reusability mechanisms for transformation tools and languages. In this paper we present two approaches for reusing model transformation definitions. Firstly, we tackle the creation of related model transformations, showing how the factorization of common parts can be achieved. Secondly, we describe a proposal on the composition of existing, separated transformation definitions so that they can be used to solve a concrete transformation problem. We illustrate both proposals with examples taken from the development of a software product line for adventure games, which has been implemented using the modularization mechanisms of the RubyTL transformation language.},
address = {Berlin, Heidelberg},
author = {{S{\'{a}}nchez Cuadrado}, Jes{\'{u}}s and {Garc{\'{i}}a Molina}, Jes{\'{u}}s},
booktitle = {Theory and Practice of Model Transformations},
editor = {Vallecillo, Antonio and Gray, Jeff and Pierantonio, Alfonso},
isbn = {978-3-540-69927-9},
pages = {168--182},
publisher = {Springer Berlin Heidelberg},
title = {{Approaches for Model Transformation Reuse: Factorization and Composition}},
year = {2008}
}

@inproceedings{trollmann2015a,
address = {Cham},
author = {Trollmann, Frank and Albayrak, Sahin},
booktitle = {Theory and Practice of Model Transformations}, %: 8th International Conference, ICMT 2015, Held as Part of STAF 2015, L'Aquila, Italy, July 20-21, 2015. Proceedings},
doi = {10.1007/978-3-319-21155-8_16},
editor = {Kolovos, Dimitris and Wimmer, Manuel},
isbn = {978-3-319-21155-8},
pages = {214--229},
publisher = {Springer International Publishing},
title = {{Extending Model to Model Transformation Results from Triple Graph Grammars to Multiple Models}},
url = {http://dx.doi.org/10.1007/978-3-319-21155-8{\_}16},
year = {2015}
}

@inproceedings{trollmann2016a,
address = {Cham},
author = {Trollmann, Frank and Albayrak, Sahin},
booktitle = {Theory and Practice of Model Transformations}, %: 9th International Conference, ICMT 2016, Held as Part of STAF 2016, Vienna, Austria, July 4-5, 2016, Proceedings},
doi = {10.1007/978-3-319-42064-6_7},
editor = {{Van Gorp}, Pieter and Engels, Gregor},
isbn = {978-3-319-42064-6},
keywords = {multi-model},
pages = {91--106},
publisher = {Springer International Publishing},
title = {{Extending Model Synchronization Results from Triple Graph Grammars to Multiple Models}},
url = {http://dx.doi.org/10.1007/978-3-319-42064-6{\_}7},
year = {2016}
}

@INPROCEEDINGS{eramo2008a,
	author={Eramo, Romina and Pierantonio, Alfonso and Romero, Jos\'{e} Ra\'{u}l and Vallecillo, Antonio},
	booktitle={Enterprise Distributed Object Computing Conference Workshops},
	title={{Change Management in Multi-Viewpoint System Using ASP}},
	year={2008},
	pages={433-440},
	keywords={Application specific processors;Context modeling;Distributed processing;Encoding;Engines;IEC standards;ISO standards;Logic programming;Software development management;Software systems},
	doi={10.1109/EDOCW.2008.22},
}

@ARTICLE{malavolta2010a,
  author = {Ivano Malavolta and Henry Muccini and Patrizio Pelliccione and Damien A. Tamburri},
  title = {{Providing Architectural Languages and Tools Interoperability through Model Transformation Technologies}},
  journal = {IEEE Transactions of Software Engineering},
  year = {2010},
  volume = {36},
  pages = {119--140},
  number = {1},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {http://doi.ieeecomputersociety.org/10.1109/TSE.2009.51},
  ISSN={0098-5589},
}

@article {eramo2012a,
   author = {Eramo, Romina and Malavolta, Ivano and Muccini, Henry and Pelliccione, Patrizio and Pierantonio, Alfonso},
   affiliation = {Dipartimento di Informatica, Universit\'{a} dell'Aquila, Via Vetoio, L'Aquila, Italy},
   title = {{A model-driven approach to automate the propagation of changes among Architecture Description Languages}},
   journal = {Software and Systems Modeling},
   publisher = {Springer Berlin / Heidelberg},
   issn = {1619-1366},
   keyword = {Informatik},
   pages = {29-53},
   volume = {11},
   issue = {1},
   abstract = {As it is widely recognized, a universal notation accepted by any software architect cannot exist. This caused a proliferation of architecture description languages (ADLs) each focussing on a specific application domain, analysis type, or modelling environment, and with its own specific notations and tools. Therefore, the production of a software architecture description often requires the use of multiple ADLs, each satisfying some stakeholder's concerns. When dealing with multiple notations, suitable techniques are required in order to keep models in a consistent state. Several solutions have been proposed so far but they lack in convergence and scalability. In this paper, we propose a convergent change propagation approach between multiple architectural languages. The approach is generic since it depends neither on the notations to synchronize nor on their corresponding models. It is implemented within the Eclipse modelling framework and we demonstrate its usability and scalability by 
experimenting it on well known architectural languages.},
   year = {2012}
}

@inproceedings{macedo2014a,
	title = {Towards a framework for multi-directional model transformations},
	booktitle = {3rd International Workshop on Bidirectional Transformations - BX},
	volume = {1133},
	year = {2014},
	month = mar,
	publisher = {CEUR-WS.org},
	%organization = {CEUR-WS.org},
	address = {Athens, Greece},
	url= {http://haslab.uminho.pt/sites/default/files/nmacedo/files/bx14mx.pdf},
	author = {Nuno Macedo and Alcino Cunha and Hugo Pacheco}
}
