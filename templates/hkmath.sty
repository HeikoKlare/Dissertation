%\RequirePackage{mathptmx}
% but standard mathcal letters
%\DeclareMathAlphabet{\mathcal}{OMS}{cmsy}{m}{n}

% Standard intentation
\setlength{\mathindent}{\ifisafour1.5em\else1.0em\fi}

\let\oldforall\forall
\let\forall\undefined
\DeclareMathOperator{\forall}{\oldforall}
\let\oldexists\exists
\let\exists\undefined
\DeclareMathOperator{\exists}{\oldexists}

%\usepackage{mathbbol}
\usepackage{bbm}

% Formula Formatting
\newcommand{\formulaskip}[1][1em]{\hspace{#1}}

% Notation: Sets, tuples, sequences, functions
\newcommand{\set}[1]{\mathbbm{#1}}
\newcommand{\setted}[1]{\{ #1 \}}
\newcommand{\bigsetted}[1]{\bigl{ #1 \bigr}}
\newcommand{\tuple}[1]{\mathfrak{#1}}
\newcommand{\tupled}[1]{\langle #1 \rangle}
\newcommand{\bigtupled}[1]{\big\langle #1 \big\rangle}
\newcommand{\sequence}[1]{#1[]}
\newcommand{\sequenceindex}[2]{#1[#2]}
\newcommand{\sequenced}[1]{[#1]}
\newcommand{\inverse}[1]{#1^{T}}
\newcommand{\function}[1]{\textsc{#1}}
\newcommand{\instances}[1]{I_{#1}}

\newcommand{\modelelement}[1]{\ensuremath{\mathvariable{#1}}}

% Notation: M2 level
\newcommand{\class}[2]{\MakeUppercase{#1}_{#2}}
\newcommand{\classtuple}[2]{\tuple{\MakeUppercase{#1}}_{#2}}
\newcommand{\metamodel}[2]{\MakeUppercase{#1}_{#2}}
\newcommand{\metamodelinstanceset}[2]{\instances{\metamodel{#1}{#2}}}
\newcommand{\metamodeltuple}[1]{\tuple{\MakeUppercase{#1}}}
\newcommand{\metamodeltupleinstanceset}[1]{\instances{\metamodeltuple{#1}}}
% Gives #1_1, ..., #1_#2
% #1: Name of metamodels, #2: End index
\newcommand{\metamodelsequence}[2]{\metamodel{#1}{1}, \dots, \metamodel{#1}{#2}}
% Gives I_#1_1, ..., I#1_#2
% #1: Name of metamodels, #2: End index
\newcommand{\metamodelinstancesetsequence}[2]{\metamodelinstanceset{#1}{1}, \dots, \metamodelinstanceset{#1}{#2}}
% Gives I_#1_1 x ... x I_#2_#2
% #1_ Name of metamodels, #2: End index
\newcommand{\metamodelinstancesetproduct}[2]{\metamodelinstanceset{#1}{1} \times \dots \times \metamodelinstanceset{#1}{#2}}

% Notation: M1 level
\newcommand{\object}[2]{\MakeLowercase{#1}_{#2}}
\newcommand{\model}[2]{\MakeLowercase{#1}_{#2}}
\newcommand{\modeltuple}[1]{\tuple{\MakeLowercase{#1}}}
% Gives #1_1, ..., #1_#2
% #1: Name of model, #2: End index
\newcommand{\modelsequence}[2]{\model{#1}{1}, \dots, \model{#1}{#2}}

% Notation: Consistency
\newcommand{\condition}[2]{\set{\MakeLowercase{#1}}_{#2}}
\newcommand{\conditionelement}[2]{\tuple{\MakeLowercase{#1}}_{#2}}
\newcommand{\consistencyrelation}[2]{\MakeUppercase{#1}_{#2}}
\newcommand{\inverseconsistencyrelation}[2]{\inverse{\MakeUppercase{#1}}_{#2}}
\newcommand{\consistencyrelationset}[1]{\set{\MakeUppercase{#1}}}
\newcommand{\consistencyrelationpair}[2]{\tuple{#1}_{#2}}
\newcommand{\transformation}[1]{\tuple{\MakeLowercase{#1}}}
\newcommand{\transformationset}[1]{\set{\MakeLowercase{#1}}}
\newcommand{\transformationnetwork}[1]{\tuple{\MakeUppercase{#1}}}

% Notation: Consistency Preservation
\newcommand{\change}[1]{\delta_{#1}}
\newcommand{\changetuple}[1]{\tuple{\delta}_{#1}}
\newcommand{\identitychange}{\delta_{\mathit{id}}}
% Set of all changes for the metamodel tuple given as argument
\newcommand{\changeuniverse}[1]{\Delta_{#1}}
% Set of all tuples of changes for the metamodel tuple given as argument
%\newcommand{\changetupleuniverse}[1]{\Delta_{#1}}
\newcommand{\consistencypreservationrule}[1]{\textsc{Cpr}_{#1}}
\newcommand{\consistencypreservationruleset}[1]{\set{CPR}_{#1}}

% Notation: Networks
\newcommand{\generalizationfunction}[1]{\function{Gen}_{#1}}
\newcommand{\appfunction}[1]{\function{App}_{#1}}
\newcommand{\orcfunction}[1]{\function{Orc}_{#1}}

% Notation: Properties (Compatibility)
\newcommand{\propertyset}[2]{\set{#1}_{#2}}
\newcommand{\propertysettuple}[2]{\tuple{#1}_{#2}}
\newcommand{\propertyvalueset}[2]{\set{#1}_{#2}}
\newcommand{\propertyvaluesettuple}[2]{\tuple{#1}_{#2}}
\newcommand{\propertycollection}[1]{\set{P}_{#1}}
\newcommand{\propdisplay}[1]{\mathvariable{#1}}

% Math notations
\newcommand{\transitiveclosure}[1]{#1^+}
\newcommand{\equivalentperdefinition}{:\Leftrightarrow}
\newcommand{\equivalent}{\Leftrightarrow}
\newcommand{\equalsperdefinition}{\coloneqq}

% Math Texts
\newcommand{\mathtextspacebefore}[1]{\; \textit{#1}}
\newcommand{\mathtextspacearound}[1]{\; \textit{#1} \;}
\newcommand{\mathtextspaceafter}[1]{\textit{#1} \;}
\newcommand{\consistenttomath}{\mathtextspacearound{consistent to}}
\newcommand{\inconsistenttomath}{\mathtextspacearound{inconsistent to}}
\newcommand{\containsmath}{\mathtextspacearound{contains}}
\newcommand{\matchesmath}{\mathtextspacearound{matches}}
\newcommand{\compatiblemath}{\mathtextspacearound{compatible}}
\newcommand{\equivalenttomath}{\mathtextspacearound{equivalent to}}
\newcommand{\redundantinmath}{\mathtextspacearound{redundant in}}
\newcommand{\correctmath}{\mathtextspacearound{correct}}
\newcommand{\withmath}{\mathtextspacearound{with}}
\newcommand{\andmath}{\mathtextspacearound{and}}
\newcommand{\leftequalredundantinmath}{\mathtextspacearound{left-equal redundant in}}
\newcommand{\compatibilitypreservingtomath}{\mathtextspacearound{compatibility-preserving to}}
\newcommand{\mathvariable}[1]{\mathit{#1}}
\newcommand{\truemath}{\mathvariable{true}}
\newcommand{\falsemath}{\mathvariable{false}}
\newcommand{\otherwisemath}{\mathvariable{otherwise}}

% Math operators
\newcommand{\concat}{\concatrelation}
\newcommand{\concatrelation}{\ensuremath{\mathrel{\otimes}}}
\newcommand{\concatfunction}{\ensuremath{\mathrel{\circ}}}
\usepackage{mathtools}
\DeclarePairedDelimiter\abs{\lvert}{\rvert} % \abs{} command for absolute value

% Turing Machine
\newcommand*{\TuringMachine}{\textsc{tm}}
\DeclareMathOperator{\Tr}{Tr}
